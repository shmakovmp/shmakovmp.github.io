[{"authors":null,"categories":null,"content":"Шмаков Максим хороший студент, который не просрачивает дедлайны.\n  Download my resumé.\n","date":1653523200,"expirydate":-62135596800,"kind":"term","lang":"ru","lastmod":1653523200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Шмаков Максим хороший студент, который не просрачивает дедлайны.\n  Download my resumé.","tags":null,"title":"Шмаков Максим","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/ru/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"Введение В компьютерных играх, игроки часто пытаются добиться преимущества над противником легальными и нелегальными (в рамках игры) путями. Нелегальными считаются читы - программы меняющие файлы игры и дающие нечестное преимущество игроку. Но, многие считают, что если подобная программа не блокируется игровыми античитом (программа, которая банит за использование читов), то такие утилиты легальны. И баннихоп как раз и является такой утилитой.\nЧто такое баннихоп? В игре cs:go есть такая механика, когда игрок прыгает на ходу без остановки из стороны в сторону, его скорость увеличивается. Такую технику называют баннихоп. Без помощи программ, помогающих не потерять набранную скорость подобной распрыжкой, использовать баннихоп в обычной игре очень трудно. Легко потерять скорость и вовсе испортить этим свое положение в игре.\nО программе Наша программа, помогает поддерживать скорость и иметь преимущество над противником. Также она не блокируется античитом, так как не меняет память игры, а только читает ее. Соответственно, можно считать ее полностью легальной к использованию и не бояться, что, играя с ней, ты можешь получить бан.\nЧто пошло не так? Мы решили назвать ее “no fantasy”. Мы посчитали, что это довольно оригинальное название, которое легко запомнить. Долго трудились над разработкой этого проекта, но потом на меня и моего партнера легло много различных обязанностей в остальных сферах жизни, из-за чего пришлось закрыть проект.\nВот такая история.\n","date":1653523200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1653523200,"objectID":"8ea3b3aaad1eb7eb4aa15d415b9d9f77","permalink":"https://example.com/ru/project/bunnyhop-software-for-csgo-no-fantasy/","publishdate":"2022-05-26T00:00:00Z","relpermalink":"/ru/project/bunnyhop-software-for-csgo-no-fantasy/","section":"project","summary":"Программа для ускорения передвижения в игре cs:go.","tags":["Other"],"title":"Bunnyhop для cs:go \"no fantasy\"","type":"project"},{"authors":["Шмаков Максим"],"categories":["programming"],"content":"Bash Сценарии командной оболочки Unix, тесно связаны с языком программирования C. На Bash обычно пишутся сценарии конфигурации сервера, поэтому это хороший выбор для работы в современных облачных средах с контейнерным хранением и микросервисами. Скрипты командной оболочки используются достаточно часто, так что знание этого языка пригодится.\nОбласти применения: администрирование сервера, инструменты интерфейса командной строки, DevOps, виртуализация.\nПлюсы: универсальность, доступность.\nМинусы: медленный, не подходит для болшьших проектов.\nC/C++ Эти языки часто занимают вершины различных рейтингов — их ценят за мощность и быстродействие. Сегодня два этих языка лежат в основе всего: от ОС и игр до современных научных вычислений и машинного обучения. C и C++ хорошо подходят для требовательных приложений, которым важны низкоуровневый доступ к оборудованию и производительность. Для освоения этих языков нужно время и определенные усилия.\nОбласть применения: разработка ОС / SDK, встроенные устройства, игровые движки, наука.\nПлюсы: быстрый, большое сообщество.\nМинусы: сложен для изучения, плохая поддержка модульности.\nC# C# часто используется для разработки бизнес-приложений, API, игр и многого другого. Благодаря широкому набору функций этот язык подходит для работы с графикой и других задач асинхронного программирования.\nОбласти применения: корпоративные приложения, разработка программного и пользовательского интерфейса, игры, графика.\nПлюсы: удобный, легко разрабатывать, много библиотек и шаблонов.\nМинусы: лекго дизассемблируется (плохо для конкуренции).\nDart Современный язык, разработанный в Google для создания мобильных, десктопных, веб-и серверных приложений. Dart напоминает другие современные языки объектно-ориентированного программирования — C #, TypeScript и Java — и предоставляет обширный набор функций, подходящих для определения сложных взаимодействий, асинхронных операций, анимации и других задач.\nОбласти применения: кроссплатформенные приложения, облачные сервисы / корпоративные системы, игры, графика.\nПлюсы: удобный, меньше проблем при использовании в сравнении с JS.\nМинусы: не такой производительный (игры), не подходит для обработки больших научных данных, маленькое сообщество.\nJava Java — это ООП-язык общего назначения, предназначенный для компиляции в байт-код для запуска на виртуальной машине Java. К 2020 году к ним относятся практически все виды устройств — от телевизоров и игровых приставок до серверов, телефонов и даже кухонных приборов. Язык широко распространен в корпорациях и университетах, что сделало его популярным как среди начинающих программистов, так и среди опытных разработчиков.\nОбласти применения: корпоративные приложения, встроенные системы, веб-сервисы, игры.\nПлюсы: концепция ООП, легок в осоении, безопасен, большое сообщество.\nМинусы: низкая скорость, платный для коммерческого использования.\nJavaScript JavaScript нужен, чтобы добавлять выполнение скриптов на сайты. Сегодня это универсальный язык веб-интерфейса с мощными стандартизированными функциями, которые поддерживаются всеми основными браузерами. JavaScript соответствует стандарту EcmaScript, который обновляется каждые несколько лет с добавлением новых спецификаций языка. Кроме того, JavaScript часто используется для разработки серверных служб и API, мобильных приложений, игр и другого программного обеспечения. Это отличный выбор для изучения и дальнейшего совершенствования.\nОбласти применения: фулстэк-разработка, облачные сервисы / контейнерное хранение, игры, утилиты.\nПлюсы: быстрый, много библиотек, легок в изучении, востребованный на рынке, большое сообщество.\nМинусы: не читает и не загружает файлы, небезопасный, не поддерживает удаленный доступ.\nKotlin Kotlin, разработанный для взаимодействия с Java, оснащен возможностями функционального программирования и функциями ООП, включая работу с ламбда-выражениями, перегрузку операторов и так далее. В 2019 году Google назвал Kotlin предпочтительным языком для разработки под Android, поэтому его точно стоит изучить тем, кто планирует создавать приложения для Android и плагины для популярных SDK.\nОбласти применения: приложения для Android, разработка на стороне сервера, а также все сферы, где используется Java.\nПлюсы: концепция ООП, нет лишних функций, безопасен, простой синтаксис.\nМинусы: низкая скорость, маленькое сообщество, мало библиотек и фреймворков.\nPython Python пользуется поддержкой крупных платформ и применяется в самых разных сферах, в том числе в науке, интеллектуальной обработке данных, разработке систем искусственного интеллекта, компьютерной графике для художественных фильмов, облачных вычислениях, разработке игр и многих других. Python хорошо зарекомендовал себя и останется одним из наиболее востребованных инструментов в течение долгого времени.\nОбласти применения: искусственный интеллект / машинное обучение, интеллектуальная обработка данных, облачные сервисы / веб, медиа, скрипты.\nПлюсы: легок в изучении, простой, востребованный, универсальный, большое …","date":1653523200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1653523200,"objectID":"8ab93d4519df3b589e6d32034b6919b7","permalink":"https://example.com/ru/post/%D1%8F%D0%B7%D1%8B%D0%BA%D0%B8-%D0%BD%D0%B0%D1%83%D1%87%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F./","publishdate":"2022-05-26T00:00:00Z","relpermalink":"/ru/post/%D1%8F%D0%B7%D1%8B%D0%BA%D0%B8-%D0%BD%D0%B0%D1%83%D1%87%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F./","section":"post","summary":"Пост об языках программирования.","tags":["Education"],"title":"Языки научного программирования","type":"post"},{"authors":["Шмаков Максим"],"categories":["Stories"],"content":"С чего начать? Первое, что мы делаем, это скачиваем powerpoint или гуглим его веб-версию. Там мы будем создавать наши презентаци. Нажимаем пустая презентация. Нам высвечивается пустой заголовочный файл, в котором мы можем назвать тему презетации и, кто ее делает. Далее для создания новых слайдов нажимаем слайды -\u0026gt; создать слайд. Тут мы уже начинаем раскрывать тему и можем вставлять картинки. Под конец вашей презентации создаем новый слайд и в его настройках в макете выбираем титульный слайд и пишем “Спасибо за внимание.”. Дам еще пару советов по содержанию презентации. Обычно, презентация вам нужна, чтобы дополнить свое устное выступление, поэтому в презентации не должен быть слово в слово написан тот текст, который вы читаете. В нем может быть выписана оснавная мысль параграфа и картинка, которая может помочь больше понять о чем идет речь.\nВыводы Это минимальный набор знаний, который вам нужен, чтобы суметь создать презентацию, например, для своего докалад. Спасибо за внимание!)\n","date":1653091200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1653091200,"objectID":"506f3c692d462ac8afccbcddbe447acb","permalink":"https://example.com/ru/post/%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BF%D1%80%D0%B5%D0%B7%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D0%B8./","publishdate":"2022-05-21T00:00:00Z","relpermalink":"/ru/post/%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BF%D1%80%D0%B5%D0%B7%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D0%B8./","section":"post","summary":"Это пост о том как делать презентации.","tags":["life"],"title":"Создание презентаций.","type":"post"},{"authors":["Шмаков Максим"],"categories":["Stories"],"content":"Нечего рассказать На этой неделе я делал все то же самое, что и обычно: ходил в уник, делал дз и старался не просрачивать дедлайны. Все как всегда. Но в этот раз было хоть что-то интересное. Я и мой папа заказали новый ssd, клавиатуру и аккумклятор для моего ноутбука, который, кстати, подыхает. И моя сестра выиграла первое место в соревновании по плаванию. Мы отметилии это роллами. Я хочу уже поскорее улучшить свой ноутбук! На этом все, спасибо, что прочитали.\n","date":1653091200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1653091200,"objectID":"20a526a2b9edc1fe480bdde7a2c1cd31","permalink":"https://example.com/ru/post/3rd-week/","publishdate":"2022-05-21T00:00:00Z","relpermalink":"/ru/post/3rd-week/","section":"post","summary":"Я не только ходил в университет как обычно всю недели и не делал ничего кроме дз, но и испытал что-то крутое...","tags":["life"],"title":"Третья неделя была такой же скучной, как и всегда, но...","type":"post"},{"authors":["Шмаков Максим"],"categories":["Stories"],"content":"Что было? На этой неделе я не делал нчиего нового, все так же ходил в уник, делал дз итд… Но в этот раз все ощущалось лучше чем обычно и не так рутинно. И я думаю я знаю почему.\nВ прошлом посте о моей неделе я говорил что я получил новые комплектующие для моего ноутбука (ssd, клавиатура и батарейка). В общем, я переставил все старое в ноутбуке на новое и им стало намного приятнее полльзоваться. С ssd вместо hdd каждая операция стала в разы быстрее, например, обычно у меня уходило от 10 до 15 минут на включение ноута, а теперь только 10-15 секунд!!! Сложно поверить, что один ssd так сильно меняет весь экспириенс.\nКороче да, я думаю это и есть причина по которой эта неделя была лучше.\nСпасибо за то, что прочитали, пока.\n","date":1653091200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1653091200,"objectID":"1497e0a57555e84eed759e73a73724ff","permalink":"https://example.com/ru/post/4th-week/","publishdate":"2022-05-21T00:00:00Z","relpermalink":"/ru/post/4th-week/","section":"post","summary":"Это пост о моей 4ой неделе.","tags":["life"],"title":"Четвертая неделя была пока что лучшей из всех.","type":"post"},{"authors":["Шмаков Максим"],"categories":["Stories"],"content":"Нечего рассказать. Единственное, чем эта неделя отличалась от предыдущей, это то, что мы с папой купили маме новый телефон. Я помогал его выбрать. Больше ничего прикольного не было, поэтому на этом все.\nСпасибо, что прочитали, пока.\n","date":1653091200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1653091200,"objectID":"f6381507b0b675bd41804ba0cd6a6bb3","permalink":"https://example.com/ru/post/my-another-week/","publishdate":"2022-05-21T00:00:00Z","relpermalink":"/ru/post/my-another-week/","section":"post","summary":"Я как всегда ходил в университет и ничего не делал, кроме домашки.","tags":["life"],"title":"Эта неделя была такой же скучной, как и остальные.","type":"post"},{"authors":["Шмаков Максим"],"categories":["Stories"],"content":"Нечего рассказать. На этой неделе я не делал ничего нового. Просто сидел дома, делал дз и в свободное время немного играл на компе. Обычно единственный день, когда у меня больше свободного времени, чем обычно - это понедельник. Это день когда я проверяю лабы одногруппиников и это занимает не так много времени. В остальные дни я только и делаю, что решаю лабы и делаю дз по другим предметам.\nСпасибо, что прочитали, пока.\n","date":1653091200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1653091200,"objectID":"1534482eea35edeb0201170a1e2f928e","permalink":"https://example.com/ru/post/my-week/","publishdate":"2022-05-21T00:00:00Z","relpermalink":"/ru/post/my-week/","section":"post","summary":"Я как всегда ходил в университет и ничего не делал, кроме домашки.","tags":["life"],"title":"Эта неделя была такой же скучной, как и остальные.","type":"post"},{"authors":["Шмаков Максим"],"categories":["Stories"],"content":"Легковесные языки разметки. Как вы, вероятно, видели из прошлых статей, здесь, на , мы фанаты Markdown . Изучая этот простой и интуитивно понятный формат, вы сможете легко создавать привлекательные результаты. От PDF до веб-страниц ваш простой текстовый файл становится сложным документом. Но Markdown не единственная игра в городе. Существует ряд других так называемых облегченных языков разметки, похожих на Markdown, но с различными наборами функций. Одним из них является Asciidoc . Если вам нравится Markdown, но вы ищете немного больше под капотом, стоит подумать. Вот несколько причин, почему.\nЧто такое «язык разметки»? Язык разметки — это набор кодов, который при применении к обычному тексту позволяет добавить одно или несколько из следующих свойств (среди прочих):\n Определите текст Структурировать текст Опишите макет текста Украсить текст  Один язык разметки, с которым вы сталкиваетесь каждый день (если вы не отшельник), — это язык разметки гипертекста, или HTML. Веб-сайты и приложения, которые приносят вам новости и показывают вашу электронную почту, построены, по крайней мере частично, с разметкой HTML использует теги в качестве механизма для разметки необработанного текстового содержимого. Например, рассмотрим следующий фрагмент HTML:\n\u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Introducing HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Here is a paragraph in HTML... we know it\u0026#39;s a \u0026lt;strong\u0026gt;paragraph\u0026lt;/strong\u0026gt; because the surrounding \\\u0026lt;p\\\u0026gt; tags define it as one.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; Здесь тег \u0026lt; p \u0026gt; указывает, что весь последующий текст, вплоть до закрывающего тега \u0026lt; / p \u0026gt;, является абзацем. В этом смысле он определяет текст как абзац. Но обратите внимание также на теги  … они часто служат для определения макета веб-страницы, например, сколько полей находится на боковой стороне экрана.\nА теги \u0026lt; strong \u0026gt; будут украшать слово «абзац» жирным шрифтом, а теги \u0026lt; h1 \u0026gt; могут как размечать заголовок (отделять его от окружающего текста), так и определять шрифт большего размера.\nПроблема с некоторыми языками разметки (среди них HTML) заключается в том, что ввод этих тегов вручную является очень утомительным делом. И с другими языками, такими как XML , теги и их атрибуты составляют большую часть общего содержимого, чем сам текст!\nВведите облегченный язык разметки Если вы хотите воспользоваться преимуществами языков разметки, например, путем публикации HTML-страницы в Интернете или преобразования файла DocBook в PDF, чтобы его можно было распечатать, вам нужно было сделать одну из двух вещей. С одной стороны, вы можете потратить время, изучая эти языки изнутри и снаружи, записывая их вручную, а затем трижды проверяя свою работу. Или вы могли бы инвестировать деньги в инструмент, который управляет сложностью их для вас.\nК счастью, некоторые предприимчивые разработчики придумали третий вариант. Они создали новые языки разметки, которые содержали многие (в некоторых случаях большинство или все) функции более тяжелых аналогов, но значительно упростили синтаксис. Эти «легкие» языки включают в себя знакомую Markdown а также Asciidoc, формат Egc в режиме Org и синтаксис Mediawiki.\nЛегкие языки разметки имеют простой синтаксис Одним из отличительных признаков этих языков является то, что их «теги» (такие как они) должны быть интуитивно понятными. Давайте посмотрим на предыдущий фрагмент, на этот раз написанный на Asciidoc:\n Introducing Asciidoc -------------------- Where are the *paragraph* tags? We dont need them... Asciidoc is smart enough to realize this is a paragraph! Намного более читабельно, нет? Начиная сверху, мы можем определить заголовок, так как он «подчеркнут» штрихами. Вы могли бы сделать это, если бы писали от руки, просто нарисуйте подчеркивание под заголовком страницы в блокноте. Также нет тегов абзаца — Asciidoc рассматривает что-либо между двумя пустыми строками, на которых нет какой-либо другой разметки, как «простой» текст абзаца. Наконец, звездочки вокруг слова «абзац» обозначают жирным шрифтом. Поднимите руку, если вы сделали это в текстовом сообщении, чтобы означать то же самое.\nКаждый имеет один или несколько соответствующих процессоров У «тяжеловесных» языков разметки обычно есть специальное приложение для их интерпретации. В Интернете ваш браузер и, возможно, веб-сервер превратят код в яркие веб-страницы. Для документов в формате XML это может быть что-то вроде Microsoft Word, который читает и записывает в формате DOCX. (это еще один диалект XML). Таким образом, вам никогда не придется напрямую взаимодействовать с источником этих документов, только симпатичные фасады, которые показывают ваши приложения.\nМежду тем, документы, написанные на легких языках, читаются человеком в исходной форме (другой арендатор), но только истинные ботаники могут считать их красивыми. Чтобы получить хороший результат, вам нужно использовать процессор . Это приложения, которые будут последовательно проходить через вашу разметку и преобразовывать ее во что-то другое, что выглядит хорошо. Те же самые проекты, которые разрабатывают сам язык, как правило, создают утилиту для его использования. Проект …","date":1652486400,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1652486400,"objectID":"eadefb9a91ccb911b476f53c280b07e2","permalink":"https://example.com/ru/post/%D1%8F%D0%B7%D1%8B%D0%BA-%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%82%D0%BA%D0%B8-markdown./","publishdate":"2022-05-14T00:00:00Z","relpermalink":"/ru/post/%D1%8F%D0%B7%D1%8B%D0%BA-%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%82%D0%BA%D0%B8-markdown./","section":"post","summary":"Этот пост о легковесных языках разметки.","tags":["life"],"title":"Легковесные языки разметки..","type":"post"},{"authors":["Шмаков Максим"],"categories":["Stories"],"content":"Введение Эта глава о том, как начать работу с Git. Вначале изучим основы систем контроля версий, затем перейдём к тому, как запустить Git на вашей ОС и окончательно настроить для работы. В конце главы вы уже будете знать, что такое Git и почему им следует пользоваться, а также получите окончательно настроенную для работы систему.\nО системе контроля версий Что такое «система контроля версий» и почему это важно? Система контроля версий — это система, записывающая изменения в файл или набор файлов в течение времени и позволяющая вернуться позже к определённой версии. Для контроля версий файлов в этой книге в качестве примера будет использоваться исходный код программного обеспечения, хотя на самом деле вы можете использовать контроль версий практически для любых типов файлов.\nЕсли вы графический или web-дизайнер и хотите сохранить каждую версию изображения или макета (скорее всего, захотите), система контроля версий (далее СКВ) — как раз то, что нужно. Она позволяет вернуть файлы к состоянию, в котором они были до изменений, вернуть проект к исходному состоянию, увидеть изменения, увидеть, кто последний менял что-то и вызвал проблему, кто поставил задачу и когда и многое другое. Использование СКВ также значит в целом, что, если вы сломали что-то или потеряли файлы, вы спокойно можете всё исправить. В дополнение ко всему вы получите всё это без каких-либо дополнительных усилий.\nЛокальные системы контроля версий Многие люди в качестве метода контроля версий применяют копирование файлов в отдельный каталог (возможно даже, каталог с отметкой по времени, если они достаточно сообразительны). Данный подход очень распространён из-за его простоты, однако он невероятно сильно подвержен появлению ошибок. Можно легко забыть в каком каталоге вы находитесь и случайно изменить не тот файл или скопировать не те файлы, которые вы хотели.\nДля того, чтобы решить эту проблему, программисты давным-давно разработали локальные СКВ с простой базой данных, которая хранит записи о всех изменениях в файлах, осуществляя тем самым контроль ревизий.\nОдной из популярных СКВ была система RCS, которая и сегодня распространяется со многими компьютерами. RCS хранит на диске наборы патчей (различий между файлами) в специальном формате, применяя которые она может воссоздавать состояние каждого файла в заданный момент времени.\nЦентрализованные системы контроля версий Следующая серьёзная проблема, с которой сталкиваются люди, — это необходимость взаимодействовать с другими разработчиками. Для того, чтобы разобраться с ней, были разработаны централизованные системы контроля версий (ЦСКВ). Такие системы, как CVS, Subversion и Perforce, используют единственный сервер, содержащий все версии файлов, и некоторое количество клиентов, которые получают файлы из этого централизованного хранилища. Применение ЦСКВ являлось стандартом на протяжении многих лет. Такой подход имеет множество преимуществ, особенно перед локальными СКВ. Например, все разработчики проекта в определённой степени знают, чем занимается каждый из них. Администраторы имеют полный контроль над тем, кто и что может делать, и гораздо проще администрировать ЦСКВ, чем оперировать локальными базами данных на каждом клиенте.\nНесмотря на это, данный подход тоже имеет серьёзные минусы. Самый очевидный минус — это единая точка отказа, представленная централизованным сервером. Если этот сервер выйдет из строя на час, то в течение этого времени никто не сможет использовать контроль версий для сохранения изменений, над которыми работает, а также никто не сможет обмениваться этими изменениями с другими разработчиками. Если жёсткий диск, на котором хранится центральная БД, повреждён, а своевременные бэкапы отсутствуют, вы потеряете всё — всю историю проекта, не считая единичных снимков репозитория, которые сохранились на локальных машинах разработчиков. Локальные СКВ страдают от той же самой проблемы: когда вся история проекта хранится в одном месте, вы рискуете потерять всё.\nРаспределённые системы контроля версий Здесь в игру вступают распределённые системы контроля версий (РСКВ). В РСКВ (таких как Git, Mercurial, Bazaar или Darcs) клиенты не просто скачивают снимок всех файлов (состояние файлов на определённый момент времени) — они полностью копируют репозиторий. В этом случае, если один из серверов, через который разработчики обменивались данными, умрёт, любой клиентский репозиторий может быть скопирован на другой сервер для продолжения работы. Каждая копия репозитория является полным бэкапом всех данных. Более того, многие РСКВ могут одновременно взаимодействовать с несколькими удалёнными репозиториями, благодаря этому вы можете работать с различными группами людей, применяя различные подходы единовременно в рамках одного проекта. Это позволяет применять сразу несколько подходов в разработке, например, иерархические модели, что совершенно невозможно в централизованных системах.\n","date":1651881600,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1651881600,"objectID":"efc90bcaf41144c2edbf8b16d483ec24","permalink":"https://example.com/ru/post/%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%D0%BC%D0%B8-git./","publishdate":"2022-05-07T00:00:00Z","relpermalink":"/ru/post/%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%D0%BC%D0%B8-git./","section":"post","summary":"I went to uni as i usually do and did nothing but homework at home.","tags":["life"],"title":"Управление версиями. Git.","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/ru/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/ru/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Шмаков Максим","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://example.com/ru/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]