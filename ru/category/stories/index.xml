<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stories | Академик</title>
    <link>https://example.com/ru/category/stories/</link>
      <atom:link href="https://example.com/ru/category/stories/index.xml" rel="self" type="application/rss+xml" />
    <description>Stories</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ru</language><lastBuildDate>Sat, 21 May 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://example.com/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Stories</title>
      <link>https://example.com/ru/category/stories/</link>
    </image>
    
    <item>
      <title>Создание презентаций.</title>
      <link>https://example.com/ru/post/%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BF%D1%80%D0%B5%D0%B7%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D0%B8./</link>
      <pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate>
      <guid>https://example.com/ru/post/%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BF%D1%80%D0%B5%D0%B7%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D0%B8./</guid>
      <description>&lt;h2 id=&#34;с-чего-начать&#34;&gt;С чего начать?&lt;/h2&gt;
&lt;p&gt;Первое, что мы делаем, это скачиваем powerpoint или гуглим его веб-версию. Там мы будем создавать наши презентаци. Нажимаем пустая презентация. Нам высвечивается пустой заголовочный файл, в котором мы можем назвать тему презетации и, кто ее делает. Далее для создания новых слайдов нажимаем слайды -&amp;gt; создать слайд. Тут мы уже начинаем раскрывать тему и можем вставлять картинки. Под конец вашей презентации создаем новый слайд и в его настройках в макете выбираем титульный слайд и пишем &amp;ldquo;Спасибо за внимание.&amp;rdquo;.
Дам еще пару советов по содержанию презентации. Обычно, презентация вам нужна, чтобы дополнить свое устное выступление, поэтому в презентации не должен быть слово в слово написан тот текст, который вы читаете. В нем может быть выписана оснавная мысль параграфа и картинка, которая может помочь больше понять о чем идет речь.&lt;/p&gt;
&lt;h2 id=&#34;выводы&#34;&gt;Выводы&lt;/h2&gt;
&lt;p&gt;Это минимальный набор знаний, который вам нужен, чтобы суметь создать презентацию, например, для своего докалад. Спасибо за внимание!)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Третья неделя была такой же скучной, как и всегда, но...</title>
      <link>https://example.com/ru/post/3rd-week/</link>
      <pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate>
      <guid>https://example.com/ru/post/3rd-week/</guid>
      <description>&lt;h2 id=&#34;нечего-рассказать&#34;&gt;Нечего рассказать&lt;/h2&gt;
&lt;p&gt;На этой неделе я делал все то же самое, что и обычно: ходил в уник, делал дз и старался не просрачивать дедлайны. Все как всегда. Но в этот раз было хоть что-то интересное. Я и мой папа заказали новый ssd, клавиатуру и аккумклятор для моего ноутбука, который, кстати, подыхает. И моя сестра выиграла первое место в соревновании по плаванию. Мы отметилии это роллами.
Я хочу уже поскорее улучшить свой ноутбук! На этом все, спасибо, что прочитали.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Четвертая неделя была пока что лучшей из всех.</title>
      <link>https://example.com/ru/post/4th-week/</link>
      <pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate>
      <guid>https://example.com/ru/post/4th-week/</guid>
      <description>&lt;h2 id=&#34;что-было&#34;&gt;Что было?&lt;/h2&gt;
&lt;p&gt;На этой неделе я не делал нчиего нового, все так же ходил в уник, делал дз итд&amp;hellip; Но в этот раз все ощущалось лучше чем обычно и не так рутинно. И я думаю я знаю почему.&lt;/p&gt;
&lt;p&gt;В прошлом посте о моей неделе я говорил что я получил новые комплектующие для моего ноутбука (ssd, клавиатура и батарейка). В общем, я переставил все старое в ноутбуке на новое и им стало намного приятнее полльзоваться. С ssd вместо hdd каждая операция стала в разы быстрее, например, обычно у меня уходило от 10 до 15 минут на включение ноута, а теперь только 10-15 секунд!!! Сложно поверить, что один ssd так сильно меняет весь экспириенс.&lt;/p&gt;
&lt;p&gt;Короче да, я думаю это и есть причина по которой эта неделя была лучше.&lt;/p&gt;
&lt;p&gt;Спасибо за то, что прочитали, пока.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Эта неделя была такой же скучной, как и остальные.</title>
      <link>https://example.com/ru/post/my-another-week/</link>
      <pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate>
      <guid>https://example.com/ru/post/my-another-week/</guid>
      <description>&lt;h2 id=&#34;нечего-рассказать&#34;&gt;Нечего рассказать.&lt;/h2&gt;
&lt;p&gt;Единственное, чем эта неделя отличалась от предыдущей, это то, что мы с папой купили маме новый телефон. Я помогал его выбрать. Больше ничего прикольного не было, поэтому на этом все.&lt;/p&gt;
&lt;p&gt;Спасибо, что прочитали, пока.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Эта неделя была такой же скучной, как и остальные.</title>
      <link>https://example.com/ru/post/my-week/</link>
      <pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate>
      <guid>https://example.com/ru/post/my-week/</guid>
      <description>&lt;h2 id=&#34;нечего-рассказать&#34;&gt;Нечего рассказать.&lt;/h2&gt;
&lt;p&gt;На этой неделе я не делал ничего нового. Просто сидел дома, делал дз и в свободное время немного играл на компе. Обычно единственный день, когда у меня больше свободного времени, чем обычно - это понедельник. Это день когда я проверяю лабы одногруппиников и это занимает не так много времени. В остальные дни я только и делаю, что решаю лабы и делаю дз по другим предметам.&lt;/p&gt;
&lt;p&gt;Спасибо, что прочитали, пока.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Легковесные языки разметки..</title>
      <link>https://example.com/ru/post/%D1%8F%D0%B7%D1%8B%D0%BA-%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%82%D0%BA%D0%B8-markdown./</link>
      <pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate>
      <guid>https://example.com/ru/post/%D1%8F%D0%B7%D1%8B%D0%BA-%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%82%D0%BA%D0%B8-markdown./</guid>
      <description>&lt;h2 id=&#34;легковесные-языки-разметки&#34;&gt;Легковесные языки разметки.&lt;/h2&gt;
&lt;p&gt;Как вы, вероятно, видели из прошлых статей, здесь, на , мы фанаты Markdown . Изучая этот простой и интуитивно понятный формат, вы сможете легко создавать привлекательные результаты. От PDF до веб-страниц ваш простой текстовый файл становится сложным документом.
Но Markdown не единственная игра в городе. Существует ряд других так называемых облегченных языков разметки, похожих на Markdown, но с различными наборами функций. Одним из них является Asciidoc . Если вам нравится Markdown, но вы ищете немного больше под капотом, стоит подумать. Вот несколько причин, почему.&lt;/p&gt;
&lt;h2 id=&#34;что-такое-язык-разметки&#34;&gt;Что такое «язык разметки»?&lt;/h2&gt;
&lt;p&gt;Язык разметки — это набор кодов, который при применении к обычному тексту позволяет добавить одно или несколько из следующих свойств (среди прочих):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Определите текст&lt;/li&gt;
&lt;li&gt;Структурировать текст&lt;/li&gt;
&lt;li&gt;Опишите макет текста&lt;/li&gt;
&lt;li&gt;Украсить текст&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Один язык разметки, с которым вы сталкиваетесь каждый день (если вы не отшельник), — это язык разметки гипертекста, или HTML. Веб-сайты и приложения, которые приносят вам новости и показывают вашу электронную почту, построены, по крайней мере частично, с разметкой HTML использует теги в качестве механизма для разметки необработанного текстового содержимого. Например, рассмотрим следующий фрагмент HTML:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;Introducing HTML&amp;lt;/h1&amp;gt; &amp;lt;p&amp;gt;Here is a paragraph in HTML... we know it&amp;#39;s a &amp;lt;strong&amp;gt;paragraph&amp;lt;/strong&amp;gt; because the surrounding \&amp;lt;p\&amp;gt; tags define it as one.&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Здесь тег &amp;lt; p &amp;gt; указывает, что весь последующий текст, вплоть до закрывающего тега &amp;lt; / p &amp;gt;, является абзацем. В этом смысле он определяет текст как абзац.
Но обратите внимание также на теги &lt;body&gt; … они часто служат для определения макета веб-страницы, например, сколько полей находится на боковой стороне экрана.&lt;/p&gt;
&lt;p&gt;А теги &amp;lt; strong &amp;gt; будут украшать слово «абзац» жирным шрифтом, а теги &amp;lt; h1 &amp;gt; могут как размечать заголовок (отделять его от окружающего текста), так и определять шрифт большего размера.&lt;/p&gt;
&lt;p&gt;Проблема с некоторыми языками разметки (среди них HTML) заключается в том, что ввод этих тегов вручную является очень утомительным делом. И с другими языками, такими как XML , теги и их атрибуты составляют большую часть общего содержимого, чем сам текст!&lt;/p&gt;
&lt;h2 id=&#34;введите-облегченный-язык-разметки&#34;&gt;Введите облегченный язык разметки&lt;/h2&gt;
&lt;p&gt;Если вы хотите воспользоваться преимуществами языков разметки, например, путем публикации HTML-страницы в Интернете или преобразования файла DocBook в PDF, чтобы его можно было распечатать, вам нужно было сделать одну из двух вещей. С одной стороны, вы можете потратить время, изучая эти языки изнутри и снаружи, записывая их вручную, а затем трижды проверяя свою работу. Или вы могли бы инвестировать деньги в инструмент, который управляет сложностью их для вас.&lt;/p&gt;
&lt;p&gt;К счастью, некоторые предприимчивые разработчики придумали третий вариант. Они создали новые языки разметки, которые содержали многие (в некоторых случаях большинство или все) функции более тяжелых аналогов, но значительно упростили синтаксис. Эти «легкие» языки включают в себя знакомую Markdown а также Asciidoc, формат Egc в режиме Org и синтаксис Mediawiki.&lt;/p&gt;
&lt;h2 id=&#34;легкие-языки-разметки-имеют-простой-синтаксис&#34;&gt;Легкие языки разметки имеют простой синтаксис&lt;/h2&gt;
&lt;p&gt;Одним из отличительных признаков этих языков является то, что их «теги» (такие как они) должны быть интуитивно понятными. Давайте посмотрим на предыдущий фрагмент, на этот раз написанный на Asciidoc:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; Introducing Asciidoc -------------------- Where are the *paragraph* tags? We dont need them... Asciidoc is smart enough to realize this is a paragraph! 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Намного более читабельно, нет? Начиная сверху, мы можем определить заголовок, так как он «подчеркнут» штрихами. Вы могли бы сделать это, если бы писали от руки, просто нарисуйте подчеркивание под заголовком страницы в блокноте. Также нет тегов абзаца — Asciidoc рассматривает что-либо между двумя пустыми строками, на которых нет какой-либо другой разметки, как «простой» текст абзаца. Наконец, звездочки вокруг слова «абзац» обозначают жирным шрифтом. Поднимите руку, если вы сделали это в текстовом сообщении, чтобы означать то же самое.&lt;/p&gt;
&lt;h2 id=&#34;каждый-имеет-один-или-несколько-соответствующих-процессоров&#34;&gt;Каждый имеет один или несколько соответствующих процессоров&lt;/h2&gt;
&lt;p&gt;У «тяжеловесных» языков разметки обычно есть специальное приложение для их интерпретации. В Интернете ваш браузер и, возможно, веб-сервер превратят код в яркие веб-страницы. Для документов в формате XML это может быть что-то вроде Microsoft Word, который читает и записывает в формате DOCX. (это еще один диалект XML). Таким образом, вам никогда не придется напрямую взаимодействовать с источником этих документов, только симпатичные фасады, которые показывают ваши приложения.&lt;/p&gt;
&lt;p&gt;Между тем, документы, написанные на легких языках, читаются человеком в исходной форме (другой арендатор), но только истинные ботаники могут считать их красивыми. Чтобы получить хороший результат, вам нужно использовать процессор . Это приложения, которые будут последовательно проходить через вашу разметку и преобразовывать ее во что-то другое, что выглядит хорошо. Те же самые проекты, которые разрабатывают сам язык, как правило, создают утилиту для его использования. Проект Markdown предлагает Perl-скрипт с тем же именем, а сопутствующая программа Asciidoc написана на Python. Кроме того, другие утилиты преобразования будут включать поддержку некоторых из этих языков. Одним из таких примеров является превосходный Pandoc , который будет использовать Markdown, а также облегченные пометки, реструктурированный текст, Mediawiki и Org-Mode и преобразовывать их в PDF, DOCX, ODT и другие.&lt;/p&gt;
&lt;p&gt;В результате облегченные языки разметки позволяют вам работать с простым текстом, наиболее переносимым форматом данных на планете, но в конечном итоге все равно дают красивый результат. Теперь, когда вы убедились в его достоинствах, какой язык выбрать? Уценка, несомненно, является самой популярной и имеет свои преимущества (подробнее об этом позже). Но Asciidoc, в частности, является достойной альтернативой. В следующем разделе мы рассмотрим несколько причин, почему.&lt;/p&gt;
&lt;h2 id=&#34;сравнение-уценки-и-asciidoc&#34;&gt;Сравнение уценки и Asciidoc&lt;/h2&gt;
&lt;p&gt;Формат Asciidoc был создан, чтобы упростить DocBook, один из наиболее распространенных форматов при написании длинных (особенно технических) текстов. Одним из требований к славе является то, что это перевод один на один, то есть для каждого элемента в DocBook есть соответствующее представление в Asciidoc. Ниже мы рассмотрим некоторые плюсы и минусы Asciidoc по сравнению с Markdown.&lt;/p&gt;
&lt;h2 id=&#34;asciidoc-покрывает-надмножество-письменных-элементов&#34;&gt;Asciidoc покрывает надмножество письменных элементов&lt;/h2&gt;
&lt;p&gt;Целью Markdown с самого начала было создание простого формата для веб-писателей. Таким образом, элементы записи, которые он поддерживает, направлены на автоматизацию более трудоемких аспектов написания HTML (списки, например, для которых требуются теги &lt;ol&gt; или &lt;ul&gt; в дополнение к &amp;lt; теги li&amp;gt; для каждого элемента).&lt;/p&gt;
&lt;p&gt;Asciidoc также содержит их, но также предлагает более продвинутые элементы DocBook, такие как предупреждения (например, блоки выноски «Примечание:» или «Информация:») и сложные макеты таблиц. Это не значит, что вы должны использовать их все время, но они будут там и доступны, если они вам когда-нибудь понадобятся.&lt;/p&gt;
&lt;h2 id=&#34;asciidoc--это-единый-формат&#34;&gt;Asciidoc — это единый формат&lt;/h2&gt;
&lt;p&gt;Когда популярность Markdown начала снижаться, некоторые из ее пользователей начали сталкиваться с некоторыми из недостатков, описанных выше. Таким образом, эти пользователи начали разрабатывать свои собственные расширения для решения этих проблем, такие как возможность добавлять таблицы или сноски / примечания. Вскоре появилось много «ароматов» Markdown, в том числе (среди прочих):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Аромат, используемый Github для файлов «Readme» проектов, которые он размещал.&lt;/li&gt;
&lt;li&gt;«Расширенный» вариант, созданный на основе PHP-порта оригинальной Markdown, с дополнительными функциями, связанными с HTML.&lt;/li&gt;
&lt;li&gt;Аромат под названием «MultiMarkdown», в котором реализованы многие функции написания более длинных форм, включая цитаты, определения и перекрестные ссылки.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;В результате ваш документ может потребовать элементы, которые не все покрыты одним ароматом. Напротив, Asciidoc не страдает от той же фрагментации, что и Markdown в настоящее время.&lt;/p&gt;
&lt;h2 id=&#34;asciidoc-нацелен-на-разнообразие-издательских-стилей&#34;&gt;Asciidoc нацелен на разнообразие издательских стилей&lt;/h2&gt;
&lt;p&gt;Markdown отлично подходит для быстрого получения сообщения из блога из вашей головы и на страницу. Но из коробки он не создан для структурирования более длительных работ, как книга. Asciidoc предназначен для этого, и одним из примеров являются его функции «включения». Эти операторы позволяют вам включать все содержимое одного файла в другой:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; include::somefile.adoc 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Это мало чем отличается от того, как основные документы работают в текстовых редакторах. Это позволяет, например, составить каждую главу как отдельный файл, а затем «включить» их все в один файл, представляющий книгу. Когда вы обрабатываете этот «книжный файл», результат будет таким, как если бы все главы были записаны непосредственно в этот документ.&lt;/p&gt;
&lt;h2 id=&#34;markdown-достаточно-для-большинства-пользователей&#34;&gt;Markdown достаточно для большинства пользователей&lt;/h2&gt;
&lt;p&gt;Уценка охватывает все основы для большей части пользователей. Для тех, кто просто ищет блог или печатает некоторые заметки в текстовом формате, Markdown поддерживает все элементы, которые им понадобятся. Перекрестные ссылки мало что значат для пользователя, который просто хочет создать простую заметку или веб-страницу. Вы могли бы даже использовать Markdown для более длительных работ с простыми макетами, такими как роман « , и объедините их самостоятельно в конце.&lt;/p&gt;
&lt;h2 id=&#34;уценка-лучше-поддерживается&#34;&gt;Уценка лучше поддерживается&lt;/h2&gt;
&lt;p&gt;Поскольку Markdown отвечает потребностям более широкого сегмента пользователей, в конечном итоге его лучше поддерживают с точки зрения следующего:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Редакторы WYSIWYG (как определено теми, которые по крайней мере предоставляют предварительный просмотр в реальном времени) с большей вероятностью поддерживают Markdown.&lt;/li&gt;
&lt;li&gt;Онлайн-сервисы, такие как вышеупомянутый Github, с большей вероятностью принимают Markdown напрямую или с помощью дополнений.&lt;/li&gt;
&lt;li&gt;Хотя такие системы публикации, как генераторы статических сайтов чаще Поддерживать Asciidoc с плагинами, то, что они поддерживают Markdown из коробки, это почти само собой разумеющееся.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;готовы-ли-вы-попробовать-asciidoc&#34;&gt;Готовы ли вы попробовать Asciidoc?&lt;/h2&gt;
&lt;p&gt;Хотя Markdown является чем-то де-факто выбором среди облегченных языков разметки, Asciidoc содержит все те же элементы, а затем и некоторые. Дополнительные сведения об Asciidoc требуют некоторого времени для изучения, поскольку они могут лучше подготовить вас к более крупным и сложным письменным проектам.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Управление версиями. Git.</title>
      <link>https://example.com/ru/post/%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%D0%BC%D0%B8-git./</link>
      <pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate>
      <guid>https://example.com/ru/post/%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%D0%BC%D0%B8-git./</guid>
      <description>&lt;h2 id=&#34;введение&#34;&gt;Введение&lt;/h2&gt;
&lt;p&gt;Эта глава о том, как начать работу с Git. Вначале изучим основы систем контроля версий, затем перейдём к тому, как запустить Git на вашей ОС и окончательно настроить для работы. В конце главы вы уже будете знать, что такое Git и почему им следует пользоваться, а также получите окончательно настроенную для работы систему.&lt;/p&gt;
&lt;h2 id=&#34;о-системе-контроля-версий&#34;&gt;О системе контроля версий&lt;/h2&gt;
&lt;p&gt;Что такое «система контроля версий» и почему это важно? Система контроля версий — это система, записывающая изменения в файл или набор файлов в течение времени и позволяющая вернуться позже к определённой версии. Для контроля версий файлов в этой книге в качестве примера будет использоваться исходный код программного обеспечения, хотя на самом деле вы можете использовать контроль версий практически для любых типов файлов.&lt;/p&gt;
&lt;p&gt;Если вы графический или web-дизайнер и хотите сохранить каждую версию изображения или макета (скорее всего, захотите), система контроля версий (далее СКВ) — как раз то, что нужно. Она позволяет вернуть файлы к состоянию, в котором они были до изменений, вернуть проект к исходному состоянию, увидеть изменения, увидеть, кто последний менял что-то и вызвал проблему, кто поставил задачу и когда и многое другое. Использование СКВ также значит в целом, что, если вы сломали что-то или потеряли файлы, вы спокойно можете всё исправить. В дополнение ко всему вы получите всё это без каких-либо дополнительных усилий.&lt;/p&gt;
&lt;h2 id=&#34;локальные-системы-контроля-версий&#34;&gt;Локальные системы контроля версий&lt;/h2&gt;
&lt;p&gt;Многие люди в качестве метода контроля версий применяют копирование файлов в отдельный каталог (возможно даже, каталог с отметкой по времени, если они достаточно сообразительны). Данный подход очень распространён из-за его простоты, однако он невероятно сильно подвержен появлению ошибок. Можно легко забыть в каком каталоге вы находитесь и случайно изменить не тот файл или скопировать не те файлы, которые вы хотели.&lt;/p&gt;
&lt;p&gt;Для того, чтобы решить эту проблему, программисты давным-давно разработали локальные СКВ с простой базой данных, которая хранит записи о всех изменениях в файлах, осуществляя тем самым контроль ревизий.&lt;/p&gt;
&lt;p&gt;Одной из популярных СКВ была система RCS, которая и сегодня распространяется со многими компьютерами. RCS хранит на диске наборы патчей (различий между файлами) в специальном формате, применяя которые она может воссоздавать состояние каждого файла в заданный момент времени.&lt;/p&gt;
&lt;h2 id=&#34;централизованные-системы-контроля-версий&#34;&gt;Централизованные системы контроля версий&lt;/h2&gt;
&lt;p&gt;Следующая серьёзная проблема, с которой сталкиваются люди, — это необходимость взаимодействовать с другими разработчиками. Для того, чтобы разобраться с ней, были разработаны централизованные системы контроля версий (ЦСКВ). Такие системы, как CVS, Subversion и Perforce, используют единственный сервер, содержащий все версии файлов, и некоторое количество клиентов, которые получают файлы из этого централизованного хранилища. Применение ЦСКВ являлось стандартом на протяжении многих лет.
Такой подход имеет множество преимуществ, особенно перед локальными СКВ. Например, все разработчики проекта в определённой степени знают, чем занимается каждый из них. Администраторы имеют полный контроль над тем, кто и что может делать, и гораздо проще администрировать ЦСКВ, чем оперировать локальными базами данных на каждом клиенте.&lt;/p&gt;
&lt;p&gt;Несмотря на это, данный подход тоже имеет серьёзные минусы. Самый очевидный минус — это единая точка отказа, представленная централизованным сервером. Если этот сервер выйдет из строя на час, то в течение этого времени никто не сможет использовать контроль версий для сохранения изменений, над которыми работает, а также никто не сможет обмениваться этими изменениями с другими разработчиками. Если жёсткий диск, на котором хранится центральная БД, повреждён, а своевременные бэкапы отсутствуют, вы потеряете всё — всю историю проекта, не считая единичных снимков репозитория, которые сохранились на локальных машинах разработчиков. Локальные СКВ страдают от той же самой проблемы: когда вся история проекта хранится в одном месте, вы рискуете потерять всё.&lt;/p&gt;
&lt;h2 id=&#34;распределённые-системы-контроля-версий&#34;&gt;Распределённые системы контроля версий&lt;/h2&gt;
&lt;p&gt;Здесь в игру вступают распределённые системы контроля версий (РСКВ). В РСКВ (таких как Git, Mercurial, Bazaar или Darcs) клиенты не просто скачивают снимок всех файлов (состояние файлов на определённый момент времени) — они полностью копируют репозиторий. В этом случае, если один из серверов, через который разработчики обменивались данными, умрёт, любой клиентский репозиторий может быть скопирован на другой сервер для продолжения работы. Каждая копия репозитория является полным бэкапом всех данных.
Более того, многие РСКВ могут одновременно взаимодействовать с несколькими удалёнными репозиториями, благодаря этому вы можете работать с различными группами людей, применяя различные подходы единовременно в рамках одного проекта. Это позволяет применять сразу несколько подходов в разработке, например, иерархические модели, что совершенно невозможно в централизованных системах.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
